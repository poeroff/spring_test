name: Java CI with Maven and AWS Deployment

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Zip the build directory
        run: |
          zip -r app-${{ github.sha }}.zip target/*.jar appspec.yml scripts/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload ZIP to S3
        run: |
          aws s3 cp app-${{ github.sha }}.zip s3://springcicd/app-${{ github.sha }}.zip

      - name: Wait for active deployment to complete or stop it
        run: |
          ACTIVE_DEPLOYMENT=$(aws deploy list-deployments --application-name sss --deployment-group-name sss --include-only-statuses InProgress --query 'deployments[0]' --output text)
          if [ "$ACTIVE_DEPLOYMENT" != "None" ]; then
            echo "Active deployment found: $ACTIVE_DEPLOYMENT"
            WAIT_TIME=0
            MAX_WAIT_TIME=300  # 5 minutes
            while [ $WAIT_TIME -lt $MAX_WAIT_TIME ]; do
              STATUS=$(aws deploy get-deployment --deployment-id $ACTIVE_DEPLOYMENT --query 'deploymentInfo.status' --output text)
              if [ "$STATUS" != "InProgress" ]; then
                echo "Deployment $ACTIVE_DEPLOYMENT completed with status: $STATUS"
                break
              fi
              echo "Waiting for deployment to complete... (${WAIT_TIME}s)"
              sleep 30
              WAIT_TIME=$((WAIT_TIME + 30))
            done
            if [ $WAIT_TIME -ge $MAX_WAIT_TIME ]; then
              echo "Deployment did not complete within 5 minutes. Stopping it."
              aws deploy stop-deployment --deployment-id $ACTIVE_DEPLOYMENT
            fi
          else
            echo "No active deployments found."
          fi
      - name: Check ZIP contents
        run: unzip -l app-${{ github.sha }}.zip

      - name: Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name sss \
            --deployment-group-name sss \
            --s3-location bucket=springcicd,key=app-${{ github.sha }}.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE

      - name: Verify deployment
        run: |
          aws ec2 send-command \
            --instance-ids <your-instance-id> \
            --document-name "AWS-RunShellScript" \
            --parameters commands=["ls -l /home/ubuntu/myapp"]
      - name: Check CodeDeploy logs
        run: |
          aws ec2 send-command \
            --instance-ids <your-instance-id> \
            --document-name "AWS-RunShellScript" \
            --parameters commands=["cat /var/log/aws/codedeploy-agent/codedeploy-agent.log"]